"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9442],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>u});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)r=o[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),p=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},m=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),c=p(r),u=n,g=c["".concat(l,".").concat(u)]||c[u]||d[u]||o;return r?a.createElement(g,i(i({ref:t},m),{},{components:r})):a.createElement(g,i({ref:t},m))}));function u(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,i=new Array(o);i[0]=c;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:n,i[1]=s;for(var p=2;p<o;p++)i[p]=r[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},5576:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>s,toc:()=>p});var a=r(7462),n=(r(7294),r(3905));const o={},i="ArgoEvent - Create events to trigger flows",s={unversionedId:"api/argoevent",id:"api/argoevent",title:"ArgoEvent - Create events to trigger flows",description:"This class is mainly used outside Metaflow flows to create events that trigger Metaflow flows. For instance,",source:"@site/docs/api/argoevent.md",sourceDirName:"api",slug:"/api/argoevent",permalink:"/api/argoevent",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/api/argoevent.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Cards - Visualizing results",permalink:"/api/cards"},next:{title:"Step Decorators",permalink:"/api/step-decorators/"}},l={},p=[],m=e=>function(t){return console.warn("Component "+e+" was not imported, exported, or provided by MDXProvider as global scope"),(0,n.kt)("div",t)},d=m("DocSection"),c=m("SigArgSection"),u=m("SigArg"),g=m("Description"),y=m("ParamSection"),f=m("Parameter"),v={toc:p};function h(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},v,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"argoevent---create-events-to-trigger-flows"},"ArgoEvent - Create events to trigger flows"),(0,n.kt)("p",null,"This class is mainly used ",(0,n.kt)("strong",{parentName:"p"},"outside")," Metaflow flows to create events that trigger Metaflow flows. For instance,\nyou can use this class inside a non-Metaflow ETL pipeline or a microservice to trigger a Metaflow execution."),(0,n.kt)("p",null,"Note that this class assumes that you have an appropriate Metaflow configuration available. Make sure to copy the config file in any environment where this class is being used."),(0,n.kt)("p",null,"Read more in ",(0,n.kt)("a",{parentName:"p",href:"/production/event-triggering/external-events"},"Triggering Flows Based on External Events"),"."),(0,n.kt)(d,{type:"class",name:"ArgoEvent",module:"metaflow.integrations",show_import:"True",heading_level:"3",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/argo/argo_events.py#L21",mdxType:"DocSection"},(0,n.kt)(c,{mdxType:"SigArgSection"},(0,n.kt)(u,{name:"name, url=None, payload={}",mdxType:"SigArg"})),(0,n.kt)(g,{summary:"ArgoEvent is a small event, a message, that can be published to Argo Workflows. The\\nevent will eventually start all flows which have been previously deployed with `@trigger`\\nto wait for this particular named event.",mdxType:"Description"}),(0,n.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,n.kt)(f,{name:"name",type:"str,",desc:"Name of the event",mdxType:"Parameter"}),(0,n.kt)(f,{name:"url",type:"str, optional",desc:"Override the event endpoint from `ARGO_EVENTS_WEBHOOK_URL`.",mdxType:"Parameter"}),(0,n.kt)(f,{name:"payload",type:"Dict, optional",desc:"A set of key-value pairs delivered in this event. Used to set parameters of triggered flows.",mdxType:"Parameter"}))),(0,n.kt)(d,{type:"method",name:"ArgoEvent.add_to_payload",module:"metaflow.integrations",show_import:"False",heading_level:"4",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/argo/argo_events.py#L46",mdxType:"DocSection"},(0,n.kt)(c,{mdxType:"SigArgSection"},(0,n.kt)(u,{name:"self",mdxType:"SigArg"}),(0,n.kt)(u,{name:"key",mdxType:"SigArg"}),(0,n.kt)(u,{name:"value",mdxType:"SigArg"})),(0,n.kt)(g,{summary:"Add a key-value pair in the payload. This is typically used to set parameters\\nof triggered flows. Often, `key` is the parameter name you want to set to\\n`value`. Overrides any existing value of `key`.",mdxType:"Description"}),(0,n.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,n.kt)(f,{name:"key",type:"str",desc:"Key",mdxType:"Parameter"}),(0,n.kt)(f,{name:"value",type:"str",desc:"Value",mdxType:"Parameter"}))),(0,n.kt)(d,{type:"method",name:"ArgoEvent.publish",module:"metaflow.integrations",show_import:"False",heading_level:"4",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/argo/argo_events.py#L82",mdxType:"DocSection"},(0,n.kt)(c,{mdxType:"SigArgSection"},(0,n.kt)(u,{name:"self",mdxType:"SigArg"}),(0,n.kt)(u,{name:"payload",default:"None",mdxType:"SigArg"}),(0,n.kt)(u,{name:"force",default:"True",mdxType:"SigArg"}),(0,n.kt)(u,{name:"ignore_errors",default:"True",mdxType:"SigArg"})),(0,n.kt)(g,{summary:"Publishes an event.",extended_summary:"Note that the function returns immediately after the event has been sent. It\\ndoes not wait for flows to start, nor it guarantees that any flows will start.",mdxType:"Description"}),(0,n.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,n.kt)(f,{name:"payload",type:"dict",desc:"Additional key-value pairs to add to the payload.",mdxType:"Parameter"}),(0,n.kt)(f,{name:"ignore_errors",type:"bool, default: True",desc:"If True, events are created on a best effort basis - errors are silently ignored.",mdxType:"Parameter"}))),(0,n.kt)(d,{type:"method",name:"ArgoEvent.safe_publish",module:"metaflow.integrations",show_import:"False",heading_level:"4",link:"https://github.com/Netflix/metaflow/tree/master/metaflow/plugins/argo/argo_events.py#L63",mdxType:"DocSection"},(0,n.kt)(c,{mdxType:"SigArgSection"},(0,n.kt)(u,{name:"self",mdxType:"SigArg"}),(0,n.kt)(u,{name:"payload",default:"None",mdxType:"SigArg"}),(0,n.kt)(u,{name:"ignore_errors",default:"True",mdxType:"SigArg"})),(0,n.kt)(g,{summary:"Publishes an event when called inside a deployed workflow. Outside a deployed workflow\\nthis function does nothing.",extended_summary:"Use this function inside flows to create events safely. As this function is a no-op\\nfor local runs, you can safely call it during local development without causing unintended\\nside-effects. It takes effect only when deployed on Argo Workflows.",mdxType:"Description"}),(0,n.kt)(y,{name:"Parameters",mdxType:"ParamSection"},(0,n.kt)(f,{name:"payload",type:"dict",desc:"Additional key-value pairs to add to the payload.",mdxType:"Parameter"}),(0,n.kt)(f,{name:"ignore_errors",type:"bool, default: True",desc:"If True, events are created on a best effort basis - errors are silently ignored.",mdxType:"Parameter"}))))}h.isMDXComponent=!0}}]);