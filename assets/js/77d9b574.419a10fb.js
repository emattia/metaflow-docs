"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[4106],{8577:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>i,metadata:()=>l,toc:()=>u});var n=a(7462),s=(a(7294),a(3905)),o=a(2004);const i={},r="Visualizing Results",l={unversionedId:"metaflow/visualizing-results/README",id:"metaflow/visualizing-results/README",title:"Visualizing Results",description:"What if you want to share results of flows with human beings or inspect results by",source:"@site/docs/metaflow/visualizing-results/README.md",sourceDirName:"metaflow/visualizing-results",slug:"/metaflow/visualizing-results/",permalink:"/metaflow/visualizing-results/",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/metaflow/visualizing-results/README.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Debugging Flows",permalink:"/metaflow/debugging"},next:{title:"Effortless Task Inspection with Default Cards",permalink:"/metaflow/visualizing-results/effortless-task-inspection-with-default-cards"}},c={},u=[{value:"What are cards?",id:"what-are-cards",level:2}],d={toc:u};function h(e){let{components:t,...i}=e;return(0,s.kt)("wrapper",(0,n.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"visualizing-results"},"Visualizing Results"),(0,s.kt)("p",null,"What if you want to share results of flows with human beings or inspect results by\nyourself? One option is to use Jupyter notebooks and Metaflow ",(0,s.kt)("a",{parentName:"p",href:"../metaflow/client"},"Client\nAPI"),", which is a good combination for ad-hoc analysis and\nexploration."),(0,s.kt)("p",null,"If you have a good idea what information you want to observe in every execution, it is\nmore convenient to produce a relevant report automatically. Metaflow comes with a\nbuilt-in mechanism to create and view such reports with a few lines of code, called\n",(0,s.kt)("em",{parentName:"p"},"cards"),". These cards can contain any images, text, and tables which help you observe the\nflow. To get an idea of how cards works in practice, take a look at the following short\nvideo (no sound):"),(0,s.kt)(o.Z,{controls:!0,url:"https://www.youtube.com/watch?v=YSJXn6KLzXg",mdxType:"ReactPlayer"}),(0,s.kt)("h2",{id:"what-are-cards"},"What are cards?"),(0,s.kt)("p",null,"Here are some illustrative use cases that cards are a good fit for:"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"Creating a report of model performance or data quality every time a task executes, for\ninstance, every time a new model is trained."),(0,s.kt)("li",{parentName:"ul"},"Sharing human-readable results with non-technical stakeholders."),(0,s.kt)("li",{parentName:"ul"},"Debugging task behavior by attaching a suitable card to the flow during development."),(0,s.kt)("li",{parentName:"ul"},"Experiment tracking: comparing results across multiple runs",(0,s.kt)("strong",{parentName:"li"},"."))),(0,s.kt)("p",null,"In contrast, cards are not meant for building interactive dashboards, monitoring tasks\nwhile they are executing, or for ad-hoc exploration that is a spot-on use case for\nnotebooks. If you are curious, you can read more about the motivation for cards in ",(0,s.kt)("a",{parentName:"p",href:"https://outerbounds.com/blog/integrating-pythonic-visual-reports-into-ml-pipelines/"},"the\noriginal release blog\npost"),"."),(0,s.kt)("p",null,"You can attach cards in any Metaflow step. When a task corresponding to the step\nfinishes, an additional piece of code is executed which creates an HTML file visualizing\nthe results of the task. In the illustration below, the train step trains three models\nin parallel by using ",(0,s.kt)("a",{parentName:"p",href:"../metaflow/basics#foreach"},"foreach"),". The step is decorated with\nthe ",(0,s.kt)("inlineCode",{parentName:"p"},"@card")," decorator, so it produces a human-readable report alongside its usual\nprogrammatic results."),(0,s.kt)("p",null,(0,s.kt)("img",{src:a(3706).Z,width:"437",height:"312"})),(0,s.kt)("p",null,"Each model could be accompanied by a card showing model validation metrics. For\ninstance, you can easily customize the cards to look something like this:"),(0,s.kt)("p",null,(0,s.kt)("img",{src:a(5882).Z,width:"1166",height:"903"})),(0,s.kt)("p",null,"Note that cards don\u2019t change the behavior of the workflow in any way. They are created\nand stored independent of the flow or task. Should something fail during the creation of\na card, the execution of the workflow is not affected, which makes cards safe to use\neven in sensitive production deployments. Also, crucially, cards work in any compute\nenvironment such as laptops, ",(0,s.kt)("a",{parentName:"p",href:"/scaling/remote-tasks/introduction"},"any remote tasks"),", or\nwhen the flow is ",(0,s.kt)("a",{parentName:"p",href:"/production/introduction"},"scheduled to run automatically"),". Hence, you\ncan use cards to inspect and debug results during prototyping, as well as monitor the\nquality of production runs."),(0,s.kt)("p",null,"Currently, there are three main mechanisms for viewing cards, which are discussed in\ndetail below:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},"You can use ",(0,s.kt)("a",{parentName:"li",href:"../metaflow/visualizing-results/effortless-task-inspection-with-default-cards"},"the ",(0,s.kt)("inlineCode",{parentName:"a"},"card view"),"\ncommand"),"\non the command line to open a card in a local web browser."),(0,s.kt)("li",{parentName:"ol"},"You can use ",(0,s.kt)("a",{parentName:"li",href:"../metaflow/visualizing-results/effortless-task-inspection-with-default-cards#accessing-cards-via-an-api"},"the ",(0,s.kt)("inlineCode",{parentName:"a"},"get_cards"),"\nAPI"),"\nto access cards programmatically, e.g. in a notebook."),(0,s.kt)("li",{parentName:"ol"},"If you have ",(0,s.kt)("a",{parentName:"li",href:"https://netflixtechblog.com/open-sourcing-a-monitoring-gui-for-metaflow-75ff465f0d60"},"the Metaflow Monitoring\nGUI"),"\ndeployed, cards will automatically show in the task page, as shown in the video\nabove.")),(0,s.kt)("p",null,"You can customize the content of cards as much or as little as you want: You can attach\na ",(0,s.kt)("a",{parentName:"p",href:"../metaflow/visualizing-results/effortless-task-inspection-with-default-cards"},(0,s.kt)("em",{parentName:"a"},"Default\nCard"))," to\nany existing workflow without changing anything in the code. Or, with a few lines of\nPython, you can create a card with custom content by using built-in ",(0,s.kt)("a",{parentName:"p",href:"../metaflow/visualizing-results/easy-custom-reports-with-card-components"},(0,s.kt)("em",{parentName:"a"},"Card\nComponents")),".\nIf you need even more flexibility, you can find or create a ",(0,s.kt)("a",{parentName:"p",href:"../metaflow/visualizing-results/advanced-shareable-cards-with-card-templates"},(0,s.kt)("em",{parentName:"a"},"Card\nTemplate")),"\nto output a report formatted with arbitrary HTML and Javascript."),(0,s.kt)("p",null,"Learn more about these approaches in the following subsections:"),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"../metaflow/visualizing-results/effortless-task-inspection-with-default-cards"},"Effortless Task Inspection with Default\nCards")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"../metaflow/visualizing-results/easy-custom-reports-with-card-components"},"Easy Custom Reports with Card\nComponents")),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("a",{parentName:"li",href:"../metaflow/visualizing-results/advanced-shareable-cards-with-card-templates"},"Advanced, Shareable Cards with Card\nTemplates"))),(0,s.kt)("p",null,"If you are unsure, start with the ",(0,s.kt)("a",{parentName:"p",href:"../metaflow/visualizing-results/effortless-task-inspection-with-default-cards"},(0,s.kt)("em",{parentName:"a"},"Default\nCards")),"\nwhich explains the basics of card usage. For technical details, see the API reference\nthat contains ",(0,s.kt)("a",{parentName:"p",href:"/api/cards"},"a complete guide of all card APIs"),"."))}h.isMDXComponent=!0},3706:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/Visualizing_Results-fb96c855a5b54fe3af721df0cc00b143.png"},5882:(e,t,a)=>{a.d(t,{Z:()=>n});const n=a.p+"assets/images/card-docs-roc-3580f12db777a8c9137a373687d67e4a.png"}}]);