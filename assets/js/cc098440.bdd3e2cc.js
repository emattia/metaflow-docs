"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[7962],{3720:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>d});var o=a(7462),n=(a(7294),a(3905)),r=a(2004);const i={},s="What is Metaflow",l={unversionedId:"v/r/introduction/what-is-metaflow",id:"v/r/introduction/what-is-metaflow",title:"What is Metaflow",description:"Metaflow is a human-friendly library that helps scientists and engineers build and",source:"@site/docs/v/r/introduction/what-is-metaflow.md",sourceDirName:"v/r/introduction",slug:"/v/r/introduction/what-is-metaflow",permalink:"/v/r/introduction/what-is-metaflow",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/v/r/introduction/what-is-metaflow.md",tags:[],version:"current",frontMatter:{},sidebar:"r",previous:{title:"Why Metaflow",permalink:"/v/r/introduction/why-metaflow"},next:{title:"Release Notes",permalink:"/v/r/introduction/release-notes"}},c={},d=[{value:"What Metaflow offers for R users",id:"what-metaflow-offers-for-r-users",level:2},{value:"Should I Use Metaflow?",id:"should-i-use-metaflow",level:2},{value:"Infrastructure Stack for Data Science",id:"infrastructure-stack-for-data-science",level:2},{value:"The Philosophy of Metaflow",id:"the-philosophy-of-metaflow",level:2},{value:"1. Grounded on common, real-life business-oriented ML use cases",id:"1-grounded-on-common-real-life-business-oriented-ml-use-cases",level:3},{value:"2. Manage entropy with code",id:"2-manage-entropy-with-code",level:3},{value:"3. Fanatic focus on usability and ergonomics",id:"3-fanatic-focus-on-usability-and-ergonomics",level:3},{value:"4. Enable collaboration",id:"4-enable-collaboration",level:3},{value:"5. First-class support for both prototyping and production",id:"5-first-class-support-for-both-prototyping-and-production",level:3},{value:"6. Straightforward scalability",id:"6-straightforward-scalability",level:3},{value:"7. Pragmatic approach to data access and processing",id:"7-pragmatic-approach-to-data-access-and-processing",level:3},{value:"8. Failures are a feature",id:"8-failures-are-a-feature",level:3},{value:"Conclusion",id:"conclusion",level:2}],p={toc:d};function u(e){let{components:t,...i}=e;return(0,n.kt)("wrapper",(0,o.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"what-is-metaflow"},"What is Metaflow"),(0,n.kt)("p",null,"Metaflow is a human-friendly library that helps scientists and engineers build and\nmanage real-life data science projects. Metaflow was originally developed at Netflix to\nboost the productivity of data scientists who work on a wide variety of projects from\nclassical statistics to state-of-the-art deep learning."),(0,n.kt)("p",null,"Metaflow provides a unified API to the infrastructure stack that is required to execute\ndata science projects, from prototype to production."),(0,n.kt)("p",null,"Under the hood, Metaflow uses the ",(0,n.kt)("a",{parentName:"p",href:"https://docs.metaflow.org"},"Python version")," of\nMetaflow to power its actions. Hence, the R community can benefit from all the\nbattle-hardening and testing that goes into the Python version of Metaflow. Since this\nis a technical detail, as an R user, you don't have to worry about Python unless you\nwant to."),(0,n.kt)("h2",{id:"what-metaflow-offers-for-r-users"},"What Metaflow offers for R users"),(0,n.kt)("p",null,"We love the data science ecosystem provided by the R community, for example, the\n",(0,n.kt)("a",{parentName:"p",href:"https://www.tidyverse.org/"},"tidyverse")," package suite, ergonomic ",(0,n.kt)("a",{parentName:"p",href:"https://dplyr.tidyverse.org/"},"data\nwrangling")," tools, slick interactive communication tools\nsuch as ",(0,n.kt)("a",{parentName:"p",href:"https://shiny.rstudio.com/"},"Shiny"),", a data science-oriented IDE\n",(0,n.kt)("a",{parentName:"p",href:"https://rstudio.com/"},"RStudio"),", and cutting-edge libraries for statistical computing on\n",(0,n.kt)("a",{parentName:"p",href:"https://cran.r-project.org/web/packages/available_packages_by_name.html"},"CRAN"),".\nHowever, oftentimes, it is left to the data scientist to string together all these\namazing tools to get their job done, adding to their burden. Metaflow provides a better\n",(0,n.kt)("a",{parentName:"p",href:"what-is-metaflow#infrastructure-stack-for-data-science"},"infrastructure stack")," for data\nscientists in the R community in an idiomatic manner so that they can focus their energy\non data science rather than engineering."),(0,n.kt)("h2",{id:"should-i-use-metaflow"},"Should I Use Metaflow?"),(0,n.kt)("p",null,"If you are working on an existing data science project, or you are planning to start a\nnew one, consider the following questions:"),(0,n.kt)("ol",null,(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Scalability"),": Do you need more than one laptop-size computer in the project?"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Criticality"),": Is it important that results are produced correctly and in a timely\nmanner?"),(0,n.kt)("li",{parentName:"ol"},(0,n.kt)("strong",{parentName:"li"},"Complexity"),": Does the project have many moving pieces or many people working\ntogether?")),(0,n.kt)("p",null,'If you answered "yes" to any of the above, keep reading - Metaflow can help you. If the\nanswer is "no" to all of the above, which is a valid scenario e.g. when you are doing\nsmall-scale experiments on your laptop, Metaflow won\'t provide much benefit for you. You\nshould come back when your project is moving to the next stage!'),(0,n.kt)("h2",{id:"infrastructure-stack-for-data-science"},"Infrastructure Stack for Data Science"),(0,n.kt)("p",null,"Models are only a small part of an end-to-end data science project. Production-grade\nprojects rely on a thick stack of infrastructure. At the minimum, projects need data and\na way to perform computation on it. In a business environment like Netflix's, a typical\ndata science project touches all layers of the stack depicted below:"),(0,n.kt)("p",null,(0,n.kt)("img",{alt:"image",src:a(8253).Z,width:"966",height:"404"})),(0,n.kt)("p",null,"Data is accessed from a ",(0,n.kt)("strong",{parentName:"p"},"data warehouse"),", which can be a folder of files, a database,\nor a multi-petabyte data lake. The modeling code that crunches the data is executed in a\n",(0,n.kt)("strong",{parentName:"p"},"compute environment")," which can range from a laptop to a large-scale container\nmanagement system. A ",(0,n.kt)("strong",{parentName:"p"},"job scheduler")," is often used to orchestrate multiple units of\nwork."),(0,n.kt)("p",null,"How do you ",(0,n.kt)("strong",{parentName:"p"},"architect")," the code to be executed? Should you structure it as an object\nhierarchy, R functions, or packages? How do you ",(0,n.kt)("strong",{parentName:"p"},"version")," the code, input data, and\nmodels produced? Preferably, data scientists wouldn't have to spend too much energy\nthinking about the software architecture."),(0,n.kt)("p",null,"After the model has been deployed to production, ",(0,n.kt)("strong",{parentName:"p"},"model operations")," become a pertinent\nquestion: how do you keep the code running reliably in production? How do you monitor\nits performance? How do you deploy new versions of the code to run in parallel with the\nprevious version? The software industry has spent over a decade perfecting DevOps best\npractices for normal software. We are just getting started with data science."),(0,n.kt)("p",null,"At the very top of the stack there's the question of how you produce ",(0,n.kt)("strong",{parentName:"p"},"features")," for\nyour models, and you ",(0,n.kt)("strong",{parentName:"p"},"develop models")," in the first place, maybe using off-the-shelf\nlibraries. This is the area where the skills of a data scientist become most useful."),(0,n.kt)("p",null,"Metaflow provides a unified, human-friendly approach to navigating the stack. Metaflow\nis more prescriptive about the lower levels of the stack, but is less opinionated about\nthe actual data science at the top of the stack. Metaflow allows you to write your\nmodels and business logic as idiomatic R code with not much new to learn."),(0,n.kt)("p",null,"Internally, Metaflow leverages existing infrastructure when feasible. In particular, it\nis ",(0,n.kt)("a",{parentName:"p",href:"https://github.com/Netflix/metaflow-docs/tree/b90f7b9c89a00a9c344df9d41bfd39b23a674bd8/metaflow-on-aws/metaflow-on-aws.md"},"tightly integrated with Amazon Web\nServices"),".\nThe core value proposition of Metaflow is its integrated full-stack, human-centric API,\nrather than reinvention of the stack itself."),(0,n.kt)("p",null,"You can find more details about Metaflow's approach to various parts of the stack across\nthe documentation:"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"}),(0,n.kt)("th",{parentName:"tr",align:"left"}))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Model Development")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../metaflow/basics"},"Basics of Metaflow"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Model Operations")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../metaflow/debugging"},"Debugging with Metaflow")," and ",(0,n.kt)("a",{parentName:"td",href:"../metaflow/failures"},"Dealing with Failures"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Versioning")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../metaflow/client"},"Inspecting Flow and Results")," and ",(0,n.kt)("a",{parentName:"td",href:"../metaflow/tagging"},"Organizing Results"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Architecture")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../metaflow/basics"},"Basics of Metaflow"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Job Scheduler")),(0,n.kt)("td",{parentName:"tr",align:"left"},"coming soon, see ","[Roadmap]")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Compute Resources")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../metaflow/scaling"},"Scaling Out and Up"))),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("strong",{parentName:"td"},"Data Warehouse")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../metaflow/basics"},"Basics of Metaflow"))))),(0,n.kt)("p",null,"If you are an infrastructure person who wants to know how to deploy and operate\nMetaflow, take a look at ",(0,n.kt)("a",{parentName:"p",href:"https://outerbounds.com/docs/admin"},"Administrator's Guide to\nMetaflow"),"."),(0,n.kt)("p",null,"If you want to learn more, the Machine Learning Infrastructure team at Netflix has given\na number of public presentations about Metaflow prior to its open-sourcing. You can find\nlinks to these presentations below."),(0,n.kt)("p",null,"For starters, this presentation gives a comprehensive overview of Metaflow:"),(0,n.kt)(r.Z,{controls:!0,url:"https://www.youtube.com/watch?v=XV5VGddmP24",mdxType:"ReactPlayer"}),(0,n.kt)("p",null,"For other general overviews of Metaflow, see the ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/playlist?list=PLGEBSHR02Xbg0oTf7OwZ_Kk86Zx96mAOb"},"Overviews of\nMetaflow"),"\nplaylist. For more technical details, see presentations about the ",(0,n.kt)("a",{parentName:"p",href:"https://www.youtube.com/playlist?list=PLGEBSHR02XbhC-5Eqy7ERHxpuwiJHes4j"},"Internals of\nMetaflow"),"."),(0,n.kt)("h2",{id:"the-philosophy-of-metaflow"},"The Philosophy of Metaflow"),(0,n.kt)("p",null,"If you are eager to give Metaflow a try, head to the\n",(0,n.kt)("a",{parentName:"p",href:"../getting-started/tutorials/"},"tutorials"),". If you want to learn about the background of\nMetaflow in more detail, keep on reading."),(0,n.kt)("p",null,"Metaflow was originally designed and built to address practical pain points of data\nscientist at Netflix. Its design philosophy is influenced by ",(0,n.kt)("a",{parentName:"p",href:"https://jobs.netflix.com/culture"},"the unique culture at\nNetflix"),". The following eight tenets summarize the\nphilosophy of Metaflow:"),(0,n.kt)("h3",{id:"1-grounded-on-common-real-life-business-oriented-ml-use-cases"},"1. Grounded on common, real-life business-oriented ML use cases"),(0,n.kt)("p",null,"We don\u2019t focus on exotic, large-scale, specific use cases like real-time bidding or\nself-driving cars. Instead, we focus on the widest variety of ML use cases, many of\nwhich are small or medium-sized, which many companies face on a day-to-day basis."),(0,n.kt)("p",null,"We embrace the fact that the life is full of entropy: There is no elegant, grand unified\ntheory of ML infrastructure. The inputs to ML workflows are noisy, the models may be\nridden with special cases, and the outputs need to be integrated with various downstream\nsystems, instead of a single unified UI."),(0,n.kt)("p",null,"We don\u2019t expect the users of Metaflow to be unicorns who are experts in software\nengineering and machine learning. Nor we expect our users to care about ML\ninfrastructure. Metaflow helps them to get their job done."),(0,n.kt)("h3",{id:"2-manage-entropy-with-code"},"2. Manage entropy with code"),(0,n.kt)("p",null,"The first tenet implies that we must manage a great amount of inherent, irreducible\ncomplexity. Many ML infrastructures rely on GUIs, configuration, DSLs, or automation -\nwe don\u2019t. Most of these modalities fail to scale in terms of increasing complexity."),(0,n.kt)("p",null,"We rely on code. General-purpose programming languages are arguably the most effective\ntool in building functional systems for complex use cases. The main downside of code is\na steeper learning curve: for the simplest use cases, almost any other modality would\nprovide a simpler solution. To minimize this cost, we rely on easy to learn, popular\nlanguages like Python or R."),(0,n.kt)("h3",{id:"3-fanatic-focus-on-usability-and-ergonomics"},"3. Fanatic focus on usability and ergonomics"),(0,n.kt)("p",null,"The second tenet implies that we don\u2019t try to hide the complexity. Inherently complex\nproblems require complex solutions. However, we can do a lot to reduce the amount of\naccidental complexity which often results from mismatching abstractions."),(0,n.kt)("p",null,"Since the problems our users solve are complex in nature, the best we can do is to avoid\nadding unnecessary complexity and cognitive overhead with complicated tools. Metaflow\nshould be simple and highly usable."),(0,n.kt)("p",null,"We don\u2019t expect tools to solve problems. People solve problems. Hence, we focus on\noptimizing data scientist productivity, which we do by providing ergonomic tools,\nexcellent documentation, and fanatic support."),(0,n.kt)("h3",{id:"4-enable-collaboration"},"4. Enable collaboration"),(0,n.kt)("p",null,"Besides the first-person developer experience described in the third tenet, Metaflow is\nbuilt to enable collaboration. However, we are sensitive to the fact that there is not a\nsingle recipe for collaboration. Sometimes it might be just a single developer\n\u201ccollaborating\u201d with themselves over a long period of time. Sometimes it might be a\ntightly coupled team working on a common project. Sometimes it is a loosely coupled\norganization working on separate projects, sharing pieces of code and data. We want to\nsupport all these scenarios."),(0,n.kt)("p",null,"Instead of being prescriptive about the ways of collaboration, we remove roadblocks that\nhinder collaboration. Most importantly, we enable unsurprising, side effect free\nreproducibility, which removes the fear of interfering with other people\u2019s work. We also\nmake it easy to discover and access previous results produced by others."),(0,n.kt)("h3",{id:"5-first-class-support-for-both-prototyping-and-production"},"5. First-class support for both prototyping and production"),(0,n.kt)("p",null,"The third and fourth tenets make Metaflow human-centric. People produce complex creative\nwork iteratively. We want to make iterative development the default mode of operation:\n",(0,n.kt)("strong",{parentName:"p"},"y"),"ou can start prototyping locally with a very straightforward script, which you can\nmake gradually more capable and scalable, if the results after each iteration seem\npromising enough."),(0,n.kt)("p",null,"Metaflow should be robust enough for serious production use. However, we recognize that\n\u201cproduction\u201d is a spectrum: Some projects get pushed from prototype to production\nquickly in a very experimental shape. This is OK. Some projects have such a short life\ncycle, or they are not a critical path, so it doesn\u2019t make sense to invest a lot in\nmaking them watertight."),(0,n.kt)("p",null,"We want to embrace the idea that most projects are continuous experiments, even when\nthey are being run in production. Consider Metaflow as a meta-algorithm for\nreinforcement learning with a human in the loop."),(0,n.kt)("h3",{id:"6-straightforward-scalability"},"6. Straightforward scalability"),(0,n.kt)("p",null,"The fifth tenet suggested that the user should be able to scale a Metaflow project\ngradually. This applies both to time and space."),(0,n.kt)("p",null,"We embrace the fact that R is a slow but expressive language. We encourage our users to\nwrite idiomatic R code initially, without worrying too much about performance. If\nperformance becomes an issue, we can provide an arsenal of tools for gradual performance\noptimization from performance-oriented libraries like Rcpp."),(0,n.kt)("p",null,"We encourage our users to primarily rely on vertical scalability, which allows the user\nto focus on readable, straightforward code and easy operations. When the user hits the\nlimits of vertical scalability, we make it easy to use horizontal, share-nothing\nparallelism, or hassle-free distributed learning provided e.g. by AWS Sagemaker."),(0,n.kt)("p",null,"We shy away from custom paradigms for scalability which require code to be ","(","re",")","written\nwith scalability in mind, which can lead to worse readability, harder debuggability, and\nincreased operational burden."),(0,n.kt)("h3",{id:"7-pragmatic-approach-to-data-access-and-processing"},"7. Pragmatic approach to data access and processing"),(0,n.kt)("p",null,"The sixth tenet suggested that our primary tools for scalability and performance are\nlarger servers and faster libraries. Typically, it is larger datasets that demand larger\ntools. Since the question of big data is so central to ML projects, we want to provide\nspecific data tooling to address these needs."),(0,n.kt)("p",null,"Following the sixth tenet, we don\u2019t want to introduce new paradigms for data processing.\nInstead, we want to make old, proven paradigms usable again: We make sure that the basic\nlibraries for loading data, representing data in memory, and transforming data are\nperformant and easy to use."),(0,n.kt)("p",null,"We also recognize that this approach has its limits. We leverage other big data tools\nsuch as Spark for heavy lifting when necessary."),(0,n.kt)("h3",{id:"8-failures-are-a-feature"},"8. Failures are a feature"),(0,n.kt)("p",null,"We design Metaflow primarily for failure cases, not for the happy case. Most ML\ninfrastructures do the job well enough for the happy case. The true value of the\ninfrastructure is shown when things fail. This is especially true for ML workflows with\na high degree of inherent complexity."),(0,n.kt)("p",null,"Most of the lifetime cost of a successful ML project comes from operational cost which\nis accumulated after the first production deployment, similar to any software project.\nTo minimize this cost, we want to make operational issues easy to diagnose and fix. This\nis a key motivation for the sixth and the seventh tenets, since many if not most\noperational issues are related to scalability and data."),(0,n.kt)("p",null,"We provide highly usable tools for proactive monitoring and detection of errors, before\nthings fail catastrophically, as well for reactive debugging."),(0,n.kt)("h2",{id:"conclusion"},"Conclusion"),(0,n.kt)("p",null,"Don't expect the current version of Metaflow to be a perfect manifestation of these\nprinciples. Metaflow is being actively developed. However, much of the foundation\nexists, and it has proven to be successful at Netflix. If this vision resonates with\nyou, we welcome you to join the project! A good next step is to take a look at the\n",(0,n.kt)("a",{parentName:"p",href:"../getting-started/tutorials/"},"tutorials"),"."))}u.isMDXComponent=!0},8253:(e,t,a)=>{a.d(t,{Z:()=>o});const o=a.p+"assets/images/triangles-6ea695b33f2d077b548121779a75895b.png"}}]);