"use strict";(self.webpackChunkdocusaurus=self.webpackChunkdocusaurus||[]).push([[9908],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>d});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,g=m["".concat(l,".").concat(d)]||m[d]||u[d]||r;return n?a.createElement(g,o(o({ref:t},p),{},{components:n})):a.createElement(g,o({ref:t},p))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,o=new Array(r);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,o[1]=s;for(var c=2;c<r;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6218:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>c});var a=n(7462),i=(n(7294),n(3905));const r={},o="Defining Custom Images",s={unversionedId:"scaling/dependencies/containers",id:"scaling/dependencies/containers",title:"Defining Custom Images",description:"All tasks executed remotely run in a container,",source:"@site/docs/scaling/dependencies/containers.md",sourceDirName:"scaling/dependencies",slug:"/scaling/dependencies/containers",permalink:"/scaling/dependencies/containers",draft:!1,editUrl:"https://github.dev/Netflix/metaflow-docs/blob/master/docs/scaling/dependencies/containers.md",tags:[],version:"current",frontMatter:{},sidebar:"python",previous:{title:"Conda vs. PyPI",permalink:"/scaling/dependencies/conda-vs-pypi"},next:{title:"Internals of Dependency Management",permalink:"/scaling/dependencies/internals"}},l={},c=[{value:"Building a custom image",id:"building-a-custom-image",level:2},{value:"Configuring a custom image",id:"configuring-a-custom-image",level:2},{value:"1. Define a default image",id:"1-define-a-default-image",level:3},{value:"2. Define a step-specific image",id:"2-define-a-step-specific-image",level:3},{value:"3. Execute a run with a custom image",id:"3-execute-a-run-with-a-custom-image",level:3},{value:"Custom image with <code>@pypi</code> or <code>@conda</code>",id:"custom-image-with-pypi-or-conda",level:2}],p={toc:c};function u(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"defining-custom-images"},"Defining Custom Images"),(0,i.kt)("p",null,"All ",(0,i.kt)("a",{parentName:"p",href:"/scaling/remote-tasks/introduction"},"tasks executed remotely")," run in a container,\nboth on ",(0,i.kt)("a",{parentName:"p",href:"/scaling/remote-tasks/kubernetes"},"Kubernetes")," and in\n",(0,i.kt)("a",{parentName:"p",href:"/scaling/remote-tasks/aws-batch"},"AWS Batch"),". Hence, the default environment for\nremote tasks is defined by the container (Docker) image used."),(0,i.kt)("p",null,"By default, Metaflow uses ",(0,i.kt)("a",{parentName:"p",href:"https://hub.docker.com/_/python/"},"a default Python image"),"\nwhich doesn't contain any libraries besides Python itself. When additional libraries\nare needed, an easy option is to use ",(0,i.kt)("a",{parentName:"p",href:"/scaling/dependencies/libraries"},"the ",(0,i.kt)("inlineCode",{parentName:"a"},"@pypi")," and ",(0,i.kt)("inlineCode",{parentName:"a"},"@conda"),"\ndecorators")," which install libraries on the fly,\non top of the base image."),(0,i.kt)("p",null,"Alternatively, you can use any other image of your choosing. Many off-the-shelf\nimages work with Metaflow without modifications, or you can build a custom\nimage."),(0,i.kt)("h2",{id:"building-a-custom-image"},"Building a custom image"),(0,i.kt)("p",null,"The main requirement is to make sure that the image has a ",(0,i.kt)("inlineCode",{parentName:"p"},"python")," version installed."),(0,i.kt)("p",null,"For more information about building a custom image, see ",(0,i.kt)("a",{parentName:"p",href:"https://outerbounds.com/docs/build-custom-image/"},"this external howto\npage"),"."),(0,i.kt)("h2",{id:"configuring-a-custom-image"},"Configuring a custom image"),(0,i.kt)("p",null,"There are three ways to pick an image, depending how broadly you want to use the image.\nThe options are listed from the broadest to the most specific:"),(0,i.kt)("h3",{id:"1-define-a-default-image"},"1. Define a default image"),(0,i.kt)("p",null,"If you want to use an alternative image by default in all remote tasks, specify\ntwo variables in ",(0,i.kt)("a",{parentName:"p",href:"https://outerbounds.com/engineering/operations/configure-metaflow/"},"the Metaflow configuration\nfiles"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"METAFLOW_DEFAULT_CONTAINER_REGISTRY")," controls which registry Metaflow uses to pick the image. This defaults to DockerHub but could also be a URL to a public or private ECR repository on AWS.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"METAFLOW_DEFAULT_CONTAINER_IMAGE")," dictates the default container image that Metaflow should use."))),(0,i.kt)("h3",{id:"2-define-a-step-specific-image"},"2. Define a step-specific image"),(0,i.kt)("p",null,"To use a specific image in a specific step, specify the ",(0,i.kt)("inlineCode",{parentName:"p"},"image")," argument in\nthe ",(0,i.kt)("a",{parentName:"p",href:"/api/step-decorators/batch"},(0,i.kt)("inlineCode",{parentName:"a"},"@batch"))," or ",(0,i.kt)("a",{parentName:"p",href:"api/step-decorators/kubernetes"},(0,i.kt)("inlineCode",{parentName:"a"},"@kubernetes")),"\ndecorators."),(0,i.kt)("h3",{id:"3-execute-a-run-with-a-custom-image"},"3. Execute a run with a custom image"),(0,i.kt)("p",null,"You can test a specific image with a run without changing anything in the\nconfiguration or the code. Simply add ",(0,i.kt)("inlineCode",{parentName:"p"},":image=repo/image:version"),"\nto ",(0,i.kt)("inlineCode",{parentName:"p"},"--with batch")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"--with kubernetes"),"."),(0,i.kt)("p",null,"For instance, you can run with the latest Ubuntu image like this:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"python helloflow.py run --with kubernetes:image=hub.docker.com/ubuntu:latest\n")),(0,i.kt)("h2",{id:"custom-image-with-pypi-or-conda"},"Custom image with ",(0,i.kt)("inlineCode",{parentName:"h2"},"@pypi")," or ",(0,i.kt)("inlineCode",{parentName:"h2"},"@conda")),(0,i.kt)("p",null,"You can use both a custom image as well as ",(0,i.kt)("inlineCode",{parentName:"p"},"@pypi")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@conda")," on top of it.\nAs usual, ",(0,i.kt)("inlineCode",{parentName:"p"},"@pypi")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"@conda")," guarantee isolated environments, meaning that packages\ninstalled in the image won't be visible in steps unless ",(0,i.kt)("a",{parentName:"p",href:"/scaling/dependencies/libraries#disabling-environments"},"you explicity disable\nthe environment for a step"),"."),(0,i.kt)("p",null,"This combination is beneficial if there are other assets in the image besides packages\nthat should be accessed by steps. Steps may access all files in the image, e.g.\nconfiguration files, background processes work as usual, and you can launch\nimage-specific subprocesses."),(0,i.kt)("p",null,"This way, you can design a base image containing non-library assets, and let developers\nhandle libraries independently with ",(0,i.kt)("inlineCode",{parentName:"p"},"@pypi")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"@conda"),"."))}u.isMDXComponent=!0}}]);